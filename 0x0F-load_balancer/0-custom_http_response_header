#!/usr/bin/env bash
# A script that conffigures Nginx so that HTTP response contains a custom header (on web-01 and web-02)
# The name of the custom HTTP header must be X-Served-By
#The value of the custom HTTP header must be hostname of the server Nginx is running on
echo -e "Updating and Installing Nginx.\n"
sudo apt-get -y update
sudo apt-get -y install nginx
echo -e "\nAdjusting settings to accommodate update.\n"

# configure firewall to allow request through port 80
sudo ufw allow 'Nginx HTTP'

# change the permission to enable us create files in this directory easily
if [ -d "/var/www" ]; then
	sudo chown -R "$USER":"$USER" /var/www/
	sudo chmod -R 775 /var/www
else
	sudo mkdir -p /var/www
	sudo chown -R "$USER":"$USER" /var/www/
        sudo chmod -R 775 /var/www
fi

# create the index page
echo "Hello World!" |sudo tee /var/www/html/index.nginx-debian.html

# Creating redirect_me index
echo -e "https://github.com/Ibukun16" > /var/www/html/redirect_me.html

# create a webpage for error 404 message
echo "Ceci n'est pas une page" | sudo tee /var/www/html/error_404.html

# code  to configure redirect for a single page(redirect_me) and add header to display hostname
use_for_replacement="server_name _;\n\trewrite ^\/redirect_me https:\/\/github.com\/Ibukun16 permanent;"
sudo sed -i "s/server_name _;/$use_for_replacement/" /etc/nginx/sites-enabled/default

# code for custom 404 error page
string_for_error="listen 80 default_server;\n\terror_page 404 \/error_404.html;\n\tlocation = \/error_404.html {\n\t\troot \/var\/www\/html;\n\tinternal;\n\t}"
sudo sed -i "s/listen 80 default_server;/$string_for_error/" /etc/nginx/sites-enabled/default

# Creating a custom response header
sudo sed -i "/server_name _;/a add_header X-Served-By $HOSTNAME;" /etc/nginx/sites-enabled/default

# Testing configurations for syntax error
sudo nginx -t

# restart the web server after updating the settings
sudo service nginx restart

echo -e "\nCompleted.\n"
