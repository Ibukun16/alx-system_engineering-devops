#!/usr/bin/env bash
# Create a script to install and configure HAProxy on lb-01 server
# Configure HAproxy to send traffic to web-01 and web-02 servers
# Distribute requests using a roundrobin algorithm
# Make sure HAproxy can be can be managed via an init script
# Make sure your servers are configured with the right hostnames: [STUDENT_ID]-web-01 and [STUDENT_ID]-web-02

# Installing and configure HAproxy Load balancer on my lb-01 server

echo -e "Updating and doing server configuration checks...\n"

function install() {
	command -v "$1" &> /dev/null

	#shellcheck disable=SC2181

	if [ $? -ne 0 ]; then
		echo -e "	Installing: $1\n"
		sudo apt-get install software-properties-common
		sudo add-apt-repository ppa:vbernat/haproxy-3.0
		sudo apt-get update -y -qq && sudo apt-get install -y "$1" -qq
		echo -e "\n"
	else
		echo -e "	${1} is already installed.\n"
	fi

}

# Install haproxy
sudo apt-get install haproxy

echo -e "\nSetting up configurations for HAproxy.\n"

# Backup default server configuration settings on HAproxy
sudo cp -a /etc/haproxy/haproxy.cfg{,.bckup}

# Append port for listening to HAproxy configuration file
add_string="mode 660 level admin/ expose-fd listener"
sed -i "s/mode 660 level admin/$add_string/" /etc/haproxy/haproxy.cfg

# Edit configuration file
server_config=\
"
frontend balsam
	bind *:80
	mode http
	default_backend gilead
backend gilead
	balance roundrobin
	server 520156-web-01 34.227.94.180:80 check
	server 520156-web-02 100.25.167.156:80 check
"

# Shellcheck disable=SC2154
echo "$server_config" >> /etc/haproxy/haproxy.cfg

# Enable haproxy to be started by init script
echo "ENABLED=1" >> /etc/default/haproxy

# Test the configuration for HAproxy
sudo haproxy -c -f /etc/haproxy/haproxy.cfg

if [ "$(pgrep -c haproxy)" -le 0 ]; then
	sudo service haproxy start
else
	sudo service haproxy restart
fi
